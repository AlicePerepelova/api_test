plugins {
  id 'java-library'
  id 'io.qameta.allure' version '2.12.0'
  id 'io.freefair.lombok' version '8.6'
}

group 'guru.qa'
version '1.0-SNAPSHOT'


repositories {
  mavenCentral()
}

def restAssuredVersion = "5.3.1",
    allureVersion = "2.21.0"

allure {
  report {
    version.set(allureVersion)
  }
  adapter {
    aspectjWeaver.set(true)
    frameworks {
      junit5 {
        adapterVersion.set(allureVersion)
      }
    }
  }
}


compileJava {
  options.encoding = 'UTF-8'
}
compileTestJava {
  options.encoding = 'UTF-8'
}

dependencies {
  testImplementation(
      "io.rest-assured:rest-assured:$restAssuredVersion",
      "io.rest-assured:json-schema-validator:$restAssuredVersion",
      "io.qameta.allure:allure-rest-assured:$allureVersion",
      'org.junit.jupiter:junit-jupiter:5.10.0',
      'org.slf4j:slf4j-simple:2.0.7',
      'com.codeborne:selenide:7.7.3',
      "org.aeonbits.owner:owner:1.0.4",
      "com.fasterxml.jackson.core:jackson-databind:2.15.0",
      "com.fasterxml.jackson.core:jackson-core:2.15.0",
      'org.assertj:assertj-core:3.24.2',
      'com.github.javafaker:javafaker:1.0.2'
  )
  compileOnly 'org.projectlombok:lombok:1.18.30'
  annotationProcessor 'org.projectlombok:lombok:1.18.30'
}

test {
  useJUnitPlatform()
  def propertiesMap = [
      "userName2": System.getenv("userName2") ?: "admin",
      "password2": System.getenv("password2") ?: "password123"
  ]
  propertiesMap.each { key, value ->
    systemProperty "jenkins.$key", value
  }
}

tasks.withType(Test) {
  useJUnitPlatform()
  testLogging {
    lifecycle {
      events "started", "skipped", "failed", "standard_error", "standard_out"
      exceptionFormat "short"
    }
  }
}
